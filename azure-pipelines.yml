# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

pool:
  vmImage: 'macos-latest'

# steps:
# - task: CocoaPods@0
#   displayName: 'Install dependencies'
#   inputs:
#     forceRepoUpdate: false
# - task: Xcode@5
#   displayName: 'Building For iOS'
#   inputs:
#     actions: 'clean build test'
#     configuration: 'Debug'
#     sdk: 'iphoneos'
#     xcWorkspacePath: '**/GooglePlaces.xcworkspace'
#     scheme: 'GooglePlaces'
#     packageApp: false
#     destinationPlatformOption: 'iOS'
#     destinationSimulators: 'iPhone 8'


steps:
- task: InstallAppleCertificate@2
  inputs:
   certSecureFile: 'BabuCertificates.p12'
   certPwd: '12345'
   keychain: 'temp'
   deleteCert: true  

- task: InstallAppleProvisioningProfile@1
  inputs:
   provisioningProfileLocation: 'secureFiles'
   provProfileSecureFile: 'GooglePlaces.mobileprovision'
   removeProfile: true

- task: CmdLine@2
  inputs:
    script: 
      rm -rf Podfile.lock
      pod install
      
# - task: CmdLine@2
#   inputs:
#     script: 
#       fastlane development

# - task: CocoaPods@0
#   inputs:
#     forceRepoUpdate: false

# - task: Xcode@5
#   displayName: 'Building For iOS'
#   inputs:
#     actions: 'clean build test'
#     configuration: 'Debug'
#     sdk: 'iphonesimulator'
#     xcWorkspacePath: '**/GooglePlaces.xcworkspace'
#     scheme: 'GooglePlaces'
#     packageApp: false
#     destinationPlatformOption: 'iOS'
#     destinationSimulators: 'iPhone 8'

- task: Xcode@5
  inputs:
    actions: 'build'
    scheme: 'GooglePlaces'
    sdk: 'iphoneos'
    configuration: 'Release'
    xcWorkspacePath: '**/GooglePlaces.xcworkspace'
    xcodeVersion: 'default'
    packageApp: true
    signingOption: 'auto'

# - task: CopyFiles@2
#   inputs:
#     contents: '**/*.ipa'
#     targetFolder: '$(build.artifactStagingDirectory)'
#     overWrite: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(build.artifactStagingDirectory)/output/iphoneos/Release' 
#     artifactName: 'drop' 
#     publishLocation: 'Container'