# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

pool:
  vmImage: 'macos-latest'

# steps:
# - task: CocoaPods@0
#   displayName: 'Install dependencies'
#   inputs:
#     forceRepoUpdate: false
# - task: Xcode@5
#   displayName: 'Building For iOS'
#   inputs:
#     actions: 'clean build test'
#     configuration: 'Debug'
#     sdk: 'iphoneos'
#     xcWorkspacePath: '**/GooglePlaces.xcworkspace'
#     scheme: 'GooglePlaces'
#     packageApp: false
#     destinationPlatformOption: 'iOS'
#     destinationSimulators: 'iPhone 8'

steps:

# - task: InstallAppleCertificate@2
#   inputs:
#    certSecureFile: '$(p12FileName)'
#    certPwd: '$(p12Password)'
#    keychain: 'temp'
#    deleteCert: true  

# - task: InstallAppleProvisioningProfile@1
#   inputs:
#    provisioningProfileLocation: 'secureFiles'
#    provProfileSecureFile: '$(provisioningProfile)'
#    removeProfile: true

- task: CocoaPods@0
  inputs:
    forceRepoUpdate: false

- task: Xcode@5
  displayName: 'Building For iOS'
  inputs:
    actions: 'clean build test'
    configuration: 'Debug'
    sdk: 'iphonesimulator'
    xcWorkspacePath: '**/GooglePlaces.xcworkspace'
    scheme: 'GooglePlaces'
    packageApp: false
    destinationPlatformOption: 'iOS'
    destinationSimulators: 'iPhone 8'

# - task: Xcode@5
#   inputs:
#     actions: 'build'
#     scheme: 'GooglePlaces'
#     sdk: 'iphoneos'
#     configuration: 'Release'
#     xcWorkspacePath: '**/GooglePlaces.xcworkspace'
#     xcodeVersion: 'default'
#     packageApp: true
#     signingOption: 'auto'
#     signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
#     provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'

# - task: CopyFiles@2
#   inputs:
#     contents: '**/*.ipa'
#     targetFolder: '$(build.artifactStagingDirectory)'
#     overWrite: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathtoPublish: '$(build.artifactStagingDirectory)/output/iphoneos/Release' 
#     artifactName: 'drop' 
#     publishLocation: 'Container'